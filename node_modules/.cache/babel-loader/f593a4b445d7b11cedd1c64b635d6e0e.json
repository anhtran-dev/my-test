{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\my-app\\\\src\\\\components\\\\payment\\\\google-pay-v1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GooglePayV1(props) {\n  _s();\n\n  const onGooglePayLoaded = () => {\n    const paymentsClient = new window.google.payments.api.PaymentsClient({\n      environment: 'TEST' // or 'PRODUCTION'\n\n    });\n    const tokenizationSpecification = {\n      type: 'PAYMENT_GATEWAY',\n      parameters: {\n        gateway: 'example',\n        gatewayMerchantId: 'exampleGatewayMerchantId'\n      }\n    };\n    const cardPaymentMethod = {\n      type: 'CARD',\n      parameters: {\n        allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n        allowedCardNetworks: ['MASTERCARD', 'VISA']\n      },\n      tokenizationSpecification: tokenizationSpecification\n    };\n    const googlePayConfiguration = {\n      apiVersion: 2,\n      apiVersionMinor: 0,\n      allowedPaymentMethods: [cardPaymentMethod]\n    };\n\n    const onPaymentDataChanged = paymentData => {\n      console.log('onPaymentDataChanged', paymentData);\n    };\n\n    paymentsClient.isReadyToPay(googlePayConfiguration).then(response => {\n      console.log('response.result', response.result);\n      const button = paymentsClient.createButton({\n        onClick: () => {\n          const paymentDataRequest = { ...googlePayConfiguration\n          };\n          paymentDataRequest.merchantInfo = {\n            merchantName: 'Example Merchant',\n            merchantId: 'BCR2DN4TUT277F34'\n          };\n          paymentDataRequest.transactionInfo = {\n            totalPriceStatus: 'FINAL',\n            totalPrice: '1.00',\n            currencyCode: 'USD',\n            countryCode: 'US'\n          }, paymentsClient.loadPaymentData(paymentDataRequest).then(paymentData => {\n            console.log('loadPaymentData', paymentData);\n          });\n        },\n        buttonColor: 'black',\n        buttonType: 'long',\n        buttonSizeMode: 'fill'\n      });\n      button.addEventListener('paymentmethodchange', event => {\n        const paymentMethod = event.paymentMethod;\n        console.log('paymentmethodchange', paymentMethod);\n      });\n      document.getElementById('google-pay-button').appendChild(button);\n    }).catch(err => {\n      console.error('error', err);\n    });\n  };\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://pay.google.com/gp/p/js/pay.js';\n    script.addEventListener('load', () => {\n      onGooglePayLoaded();\n    });\n    document.body.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"google-pay-button\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 13\n  }, this);\n}\n\n_s(GooglePayV1, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GooglePayV1;\nexport default GooglePayV1;\n\nvar _c;\n\n$RefreshReg$(_c, \"GooglePayV1\");","map":{"version":3,"sources":["D:/xampp/htdocs/my-app/src/components/payment/google-pay-v1.js"],"names":["React","useEffect","GooglePayV1","props","onGooglePayLoaded","paymentsClient","window","google","payments","api","PaymentsClient","environment","tokenizationSpecification","type","parameters","gateway","gatewayMerchantId","cardPaymentMethod","allowedAuthMethods","allowedCardNetworks","googlePayConfiguration","apiVersion","apiVersionMinor","allowedPaymentMethods","onPaymentDataChanged","paymentData","console","log","isReadyToPay","then","response","result","button","createButton","onClick","paymentDataRequest","merchantInfo","merchantName","merchantId","transactionInfo","totalPriceStatus","totalPrice","currencyCode","countryCode","loadPaymentData","buttonColor","buttonType","buttonSizeMode","addEventListener","event","paymentMethod","document","getElementById","appendChild","catch","err","error","script","createElement","src","body"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport React, {useEffect} from 'react';\r\n\r\nfunction GooglePayV1(props) {\r\n      const onGooglePayLoaded = () => {\r\n            const paymentsClient = new window.google.payments.api.PaymentsClient({\r\n                  environment: 'TEST', // or 'PRODUCTION'\r\n            });\r\n\r\n            const tokenizationSpecification = {\r\n                  type: 'PAYMENT_GATEWAY',\r\n                  parameters: {\r\n                        gateway: 'example',\r\n                        gatewayMerchantId: 'exampleGatewayMerchantId',\r\n                  },\r\n            }\r\n\r\n            const cardPaymentMethod = {\r\n                  type: 'CARD',\r\n                  parameters: {\r\n                        allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\r\n                        allowedCardNetworks: ['MASTERCARD', 'VISA'],\r\n                  },\r\n                  tokenizationSpecification: tokenizationSpecification\r\n            }\r\n\r\n            const googlePayConfiguration = {\r\n                  apiVersion: 2,\r\n                  apiVersionMinor: 0,\r\n                  allowedPaymentMethods: [cardPaymentMethod]\r\n            }\r\n\r\n            const onPaymentDataChanged = (paymentData) => {\r\n                  console.log('onPaymentDataChanged', paymentData);\r\n            };\r\n\r\n            paymentsClient.isReadyToPay(googlePayConfiguration)\r\n                  .then(response => {\r\n                        console.log('response.result', response.result);\r\n                        const button = paymentsClient.createButton({\r\n                              onClick: () => {\r\n                                    const paymentDataRequest = {... googlePayConfiguration}\r\n                                    paymentDataRequest.merchantInfo = {\r\n                                          merchantName: 'Example Merchant',\r\n                                                merchantId: 'BCR2DN4TUT277F34',\r\n                                    }\r\n                                    paymentDataRequest.transactionInfo = {\r\n                                          totalPriceStatus: 'FINAL',\r\n                                                totalPrice: '1.00',\r\n                                                currencyCode: 'USD',\r\n                                                countryCode: 'US'\r\n                                    },\r\n                                    paymentsClient.loadPaymentData(paymentDataRequest).then((paymentData) => {\r\n                                          console.log('loadPaymentData', paymentData);\r\n                                    });\r\n                              },\r\n                              buttonColor: 'black',\r\n                              buttonType: 'long',\r\n                              buttonSizeMode: 'fill',\r\n                        });\r\n\r\n                        button.addEventListener('paymentmethodchange', (event) => {\r\n                              const paymentMethod = event.paymentMethod;\r\n                              console.log('paymentmethodchange', paymentMethod);\r\n                        });\r\n\r\n                        document.getElementById('google-pay-button').appendChild(button);\r\n                  })\r\n                  .catch(err => {\r\n                        console.error('error', err);\r\n                  })\r\n      };\r\n\r\n      useEffect(() => {\r\n            const script = document.createElement('script');\r\n            script.src = 'https://pay.google.com/gp/p/js/pay.js';\r\n            script.addEventListener('load', () => {\r\n                  onGooglePayLoaded();\r\n            });\r\n            document.body.appendChild(script);\r\n      }, [])\r\n      return (\r\n            <div id=\"google-pay-button\"></div>\r\n      );\r\n}\r\n\r\nexport default GooglePayV1;"]},"metadata":{},"sourceType":"module"}