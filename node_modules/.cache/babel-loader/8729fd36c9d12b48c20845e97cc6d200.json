{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\my-app\\\\src\\\\components\\\\payment\\\\StatusMessages.js\",\n    _s = $RefreshSig$();\n\n// A small set of helpers for displaying messages while in development.\nimport React, { useReducer } from 'react'; // `StatusMessages` is a helper component for displaying messages while in\n// development. This has no impact on your integration and can be deleted.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatusMessages = _ref => {\n  let {\n    messages\n  } = _ref;\n  return messages.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"messages\",\n    role: \"alert\",\n    children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: maybeLink(m)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }, this) : '';\n};\n\n_c = StatusMessages;\n\nconst maybeLink = m => {\n  const piDashboardBase = 'https://dashboard.stripe.com/test/payments';\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: m.replace(/(pi_(\\S*)\\b)/g, `<a href=\"${piDashboardBase}/$1\" target=\"_blank\">$1</a>`)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n}; // Small hook for adding a message to a list of messages.\n\n\nconst useMessages = () => {\n  _s();\n\n  // helper for displaying status messages.\n  return useReducer((messages, message) => {\n    // Embed link\n    return [...messages, message];\n  }, []);\n};\n\n_s(useMessages, \"gq69hNqJzBpIGP/6N53yLMnGpRw=\");\n\nexport default StatusMessages;\nexport { useMessages };\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusMessages\");","map":{"version":3,"sources":["D:/xampp/htdocs/my-app/src/components/payment/StatusMessages.js"],"names":["React","useReducer","StatusMessages","messages","length","map","m","i","maybeLink","piDashboardBase","__html","replace","useMessages","message"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC,C,CAEA;AACA;;;;AACA,MAAMC,cAAc,GAAG;AAAA,MAAC;AAACC,IAAAA;AAAD,GAAD;AAAA,SACjBA,QAAQ,CAACC,MAAT,gBACM;AAAK,IAAA,EAAE,EAAC,UAAR;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAA,cACOD,QAAQ,CAACE,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBACR;AAAA,gBAAcC,SAAS,CAACF,CAAD;AAAvB,OAAUC,CAAV;AAAA;AAAA;AAAA;AAAA,YADL;AADP;AAAA;AAAA;AAAA;AAAA,UADN,GAOM,EARW;AAAA,CAAvB;;KAAML,c;;AAWN,MAAMM,SAAS,GAAIF,CAAD,IAAO;AACnB,QAAMG,eAAe,GAAG,4CAAxB;AACA,sBACM;AAAM,IAAA,uBAAuB,EAAE;AAACC,MAAAA,MAAM,EAAEJ,CAAC,CAACK,OAAF,CAC5B,eAD4B,EAE3B,YAAWF,eAAgB,6BAFA;AAAT;AAA/B;AAAA;AAAA;AAAA;AAAA,UADN;AAML,CARD,C,CAUA;;;AACA,MAAMG,WAAW,GAAG,MAAM;AAAA;;AACpB;AACA,SAAOX,UAAU,CAAC,CAACE,QAAD,EAAWU,OAAX,KAAuB;AACnC;AACA,WAAO,CAAC,GAAGV,QAAJ,EAAcU,OAAd,CAAP;AACL,GAHgB,EAGd,EAHc,CAAjB;AAIL,CAND;;GAAMD,W;;AAQN,eAAeV,cAAf;AACA,SAAQU,WAAR","sourcesContent":["// A small set of helpers for displaying messages while in development.\r\nimport React, {useReducer} from 'react';\r\n\r\n// `StatusMessages` is a helper component for displaying messages while in\r\n// development. This has no impact on your integration and can be deleted.\r\nconst StatusMessages = ({messages}) =>\r\n      messages.length ? (\r\n            <div id=\"messages\" role=\"alert\">\r\n                  {messages.map((m, i) => (\r\n                        <div key={i}>{maybeLink(m)}</div>\r\n                  ))}\r\n            </div>\r\n      ) : (\r\n            ''\r\n      );\r\n\r\nconst maybeLink = (m) => {\r\n      const piDashboardBase = 'https://dashboard.stripe.com/test/payments';\r\n      return (\r\n            <span dangerouslySetInnerHTML={{__html: m.replace(\r\n                        /(pi_(\\S*)\\b)/g,\r\n                        `<a href=\"${piDashboardBase}/$1\" target=\"_blank\">$1</a>`\r\n                  )}}></span>\r\n      )\r\n};\r\n\r\n// Small hook for adding a message to a list of messages.\r\nconst useMessages = () => {\r\n      // helper for displaying status messages.\r\n      return useReducer((messages, message) => {\r\n            // Embed link\r\n            return [...messages, message];\r\n      }, []);\r\n};\r\n\r\nexport default StatusMessages;\r\nexport {useMessages};"]},"metadata":{},"sourceType":"module"}