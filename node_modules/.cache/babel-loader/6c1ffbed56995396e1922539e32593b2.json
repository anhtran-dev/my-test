{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\my-app\\\\src\\\\components\\\\payment\\\\google-pay-v1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GooglePayV1(props) {\n  _s();\n\n  const onGooglePayLoaded = () => {\n    const paymentsClient = new window.google.payments.api.PaymentsClient({\n      environment: 'TEST' // or 'PRODUCTION'\n\n    });\n    const tokenizationSpecification = {\n      type: 'PAYMENT_GATEWAY',\n      parameters: {\n        gateway: 'example',\n        gatewayMerchantId: 'exampleGatewayMerchantId'\n      }\n    };\n    const cardPaymentMethod = {\n      type: 'CARD',\n      parameters: {\n        allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n        allowedCardNetworks: ['MASTERCARD', 'VISA']\n      },\n      tokenizationSpecification: tokenizationSpecification\n    };\n    const googlePayConfiguration = {\n      apiVersion: 2,\n      apiVersionMinor: 0,\n      allowedPaymentMethods: [{\n        type: 'CARD',\n        parameters: {\n          allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n          allowedCardNetworks: ['MASTERCARD', 'VISA']\n        },\n        tokenizationSpecification: tokenizationSpecification\n      }]\n    };\n    const paymentDataRequest = {\n      apiVersion: 2,\n      apiVersionMinor: 0,\n      allowedPaymentMethods: [{\n        type: 'CARD',\n        parameters: {\n          allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n          allowedCardNetworks: ['MASTERCARD', 'VISA']\n        },\n        tokenizationSpecification: {\n          type: 'PAYMENT_GATEWAY',\n          parameters: {\n            gateway: 'example',\n            gatewayMerchantId: 'exampleGatewayMerchantId'\n          }\n        }\n      }],\n      merchantInfo: {\n        merchantName: 'Example Merchant',\n        merchantId: 'BCR2DN4TUT277F34'\n      },\n      transactionInfo: {\n        totalPriceStatus: 'FINAL',\n        totalPrice: '1.00',\n        currencyCode: 'USD',\n        countryCode: 'US'\n      }\n    };\n\n    const onPaymentDataChanged = paymentData => {\n      console.log('onPaymentDataChanged', paymentData);\n    };\n\n    paymentsClient.isReadyToPay(paymentDataRequest).then(response => {\n      console.log('response.result', response.result);\n      const button = paymentsClient.createButton({\n        onClick: () => {\n          paymentsClient.loadPaymentData(paymentDataRequest).then(paymentData => {\n            console.log('loadPaymentData', paymentData);\n          });\n        },\n        buttonColor: 'black',\n        buttonType: 'long',\n        buttonSizeMode: 'fill'\n      });\n      button.addEventListener('paymentmethodchange', event => {\n        const paymentMethod = event.paymentMethod;\n        console.log('paymentmethodchange', paymentMethod);\n      });\n      document.getElementById('google-pay-button').appendChild(button);\n    }).catch(err => {\n      console.error('error', err);\n    });\n  };\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://pay.google.com/gp/p/js/pay.js';\n    script.addEventListener('load', () => {\n      onGooglePayLoaded();\n    });\n    document.body.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"google-pay-button\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 13\n  }, this);\n}\n\n_s(GooglePayV1, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GooglePayV1;\nexport default GooglePayV1;\n\nvar _c;\n\n$RefreshReg$(_c, \"GooglePayV1\");","map":{"version":3,"sources":["D:/xampp/htdocs/my-app/src/components/payment/google-pay-v1.js"],"names":["React","useEffect","GooglePayV1","props","onGooglePayLoaded","paymentsClient","window","google","payments","api","PaymentsClient","environment","tokenizationSpecification","type","parameters","gateway","gatewayMerchantId","cardPaymentMethod","allowedAuthMethods","allowedCardNetworks","googlePayConfiguration","apiVersion","apiVersionMinor","allowedPaymentMethods","paymentDataRequest","merchantInfo","merchantName","merchantId","transactionInfo","totalPriceStatus","totalPrice","currencyCode","countryCode","onPaymentDataChanged","paymentData","console","log","isReadyToPay","then","response","result","button","createButton","onClick","loadPaymentData","buttonColor","buttonType","buttonSizeMode","addEventListener","event","paymentMethod","document","getElementById","appendChild","catch","err","error","script","createElement","src","body"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport React, {useEffect} from 'react';\r\n\r\nfunction GooglePayV1(props) {\r\n      const onGooglePayLoaded = () => {\r\n            const paymentsClient = new window.google.payments.api.PaymentsClient({\r\n                  environment: 'TEST', // or 'PRODUCTION'\r\n            });\r\n\r\n            const tokenizationSpecification = {\r\n                  type: 'PAYMENT_GATEWAY',\r\n                  parameters: {\r\n                        gateway: 'example',\r\n                        gatewayMerchantId: 'exampleGatewayMerchantId',\r\n                  },\r\n            }\r\n\r\n            const cardPaymentMethod = {\r\n                  type: 'CARD',\r\n                  parameters: {\r\n                        allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\r\n                        allowedCardNetworks: ['MASTERCARD', 'VISA'],\r\n                  },\r\n                  tokenizationSpecification: tokenizationSpecification\r\n            }\r\n\r\n            const googlePayConfiguration = {\r\n                  apiVersion: 2,\r\n                  apiVersionMinor: 0,\r\n                  allowedPaymentMethods: [\r\n                        {\r\n                              type: 'CARD',\r\n                              parameters: {\r\n                                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\r\n                                    allowedCardNetworks: ['MASTERCARD', 'VISA'],\r\n                              },\r\n                              tokenizationSpecification: tokenizationSpecification\r\n                        },\r\n                  ],\r\n            }\r\n\r\n            const paymentDataRequest = {\r\n                  apiVersion: 2,\r\n                  apiVersionMinor: 0,\r\n                  allowedPaymentMethods: [\r\n                        {\r\n                              type: 'CARD',\r\n                              parameters: {\r\n                                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\r\n                                    allowedCardNetworks: ['MASTERCARD', 'VISA'],\r\n                              },\r\n                              tokenizationSpecification: {\r\n                                    type: 'PAYMENT_GATEWAY',\r\n                                    parameters: {\r\n                                          gateway: 'example',\r\n                                          gatewayMerchantId: 'exampleGatewayMerchantId',\r\n                                    },\r\n                              },\r\n                        },\r\n                  ],\r\n                  merchantInfo: {\r\n                        merchantName: 'Example Merchant',\r\n                        merchantId: 'BCR2DN4TUT277F34',\r\n                  },\r\n                  transactionInfo: {\r\n                        totalPriceStatus: 'FINAL',\r\n                        totalPrice: '1.00',\r\n                        currencyCode: 'USD',\r\n                        countryCode: 'US'\r\n                  },\r\n            };\r\n\r\n            const onPaymentDataChanged = (paymentData) => {\r\n                  console.log('onPaymentDataChanged', paymentData);\r\n            };\r\n\r\n            paymentsClient.isReadyToPay(paymentDataRequest)\r\n                  .then(response => {\r\n                        console.log('response.result', response.result);\r\n                        const button = paymentsClient.createButton({\r\n                              onClick: () => {\r\n                                    paymentsClient.loadPaymentData(paymentDataRequest).then((paymentData) => {\r\n                                          console.log('loadPaymentData', paymentData);\r\n                                    });\r\n                              },\r\n                              buttonColor: 'black',\r\n                              buttonType: 'long',\r\n                              buttonSizeMode: 'fill',\r\n                        });\r\n\r\n                        button.addEventListener('paymentmethodchange', (event) => {\r\n                              const paymentMethod = event.paymentMethod;\r\n                              console.log('paymentmethodchange', paymentMethod);\r\n                        });\r\n\r\n                        document.getElementById('google-pay-button').appendChild(button);\r\n                  })\r\n                  .catch(err => {\r\n                        console.error('error', err);\r\n                  })\r\n      };\r\n\r\n      useEffect(() => {\r\n            const script = document.createElement('script');\r\n            script.src = 'https://pay.google.com/gp/p/js/pay.js';\r\n            script.addEventListener('load', () => {\r\n                  onGooglePayLoaded();\r\n            });\r\n            document.body.appendChild(script);\r\n      }, [])\r\n      return (\r\n            <div id=\"google-pay-button\"></div>\r\n      );\r\n}\r\n\r\nexport default GooglePayV1;"]},"metadata":{},"sourceType":"module"}